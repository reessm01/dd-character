{"version":3,"sources":["logo.svg","components/Navigation/Navigation.tsx","environments/environments.ts","helpers/getEnvironmentDetails.ts","services/Dnd5eApiClient.ts","services/IconFinderApiClient.ts","services/TextFormatClient.tsx","components/SearchableInput/SearchableInput.tsx","hooks/useFuzzyMatching.tsx","components/SpellCard/SpellCard.tsx","components/ExpandoCardText/ExpandoCardText.tsx","hooks/useSpellRequirements.tsx","helpers/getIcons.ts","components/SpellRequirements/SpellRequirements.tsx","components/GenericTable/GenericTable.tsx","pages/Search/GenericSearchPage.tsx","hooks/useSpellList.tsx","hooks/useSpell.tsx","App.tsx","reportWebVitals.ts","configureStore.ts","index.tsx","reducers/index.ts"],"names":["Navigation","Navbar","bg","variant","Brand","href","alt","src","logo","width","height","className","environments","local","dd5eApi","iconFinderApiKey","process","getEnvironmentDetails","Dnd5eApiClient","baseApiUrl","this","setIsLoading","setError","setData","fetchData","then","data","results","catch","error","message","finally","urlRef","url","fetch","res","json","IconFinderApiClient","token","environment","axios","get","headers","Authorization","responseType","console","log","err","TextFormatClient","regexCollection","re","onMatch","text","wordCount","split","length","indexOf","SearchableInput","placeholderText","searchOptions","suggestionKey","handleSelect","useState","suggestions","setSuggestions","searchValue","setSearchValue","fuzzySearchResults","haystack","valueToMatch","keys","setFuzzySearchResults","useEffect","searcher","FuzzySearch","sort","search","useFuzzyMatching","inputProps","placeholder","value","onChange","_","newValue","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","onClick","onTouchEnd","multiSection","SpellCard","spell","spellSelected","textClient","conditionalDisplay","processedText","desc","map","textEntry","processText","firstEntry","shift","spellRitual","ritual","spellCategory","ordinal","level","school","name","Card","Body","Title","Subtitle","SpellRequirements","castingTime","casting_time","range","components","duration","Text","handleSelected","ExpandoCardText","open","setOpen","expandableComponent","entry","uuidv4","Collapse","in","id","aria-controls","aria-expanded","useSpellRequirements","params","setCastingTime","setRange","setComponents","setDuration","setSchool","imageUrl","setImageUrl","iconFinderClient","icon","find","getIcon","toLowerCase","getImage","contentDetails","tableHeadings","Object","tableContent","mapToContent","GenericTable","headings","toString","changeCase","standardContent","content","Table","bordered","striped","GenericSearchPage","index","setSpellSelected","spellList","setSpellList","isSpellListLoading","spellListError","apiClient","getSpellList","useSpellList","setSpell","isSpellLoading","spellError","getSpell","useSpell","inputOptions","Container","fluid","Row","Col","Spinner","animation","role","App","require","config","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","history","createBrowserHistory","store","preloadedState","createStore","combineReducers","router","connectRouter","composeWithDevTools","applyMiddleware","routerMiddleware","thunk","configureStore","ApolloClient","uri","REACT_APP_GRAPHQL_API","cache","InMemoryCache","ReactDOM","component","document","getElementById"],"mappings":"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","file":"static/js/main.f473e30e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport { Navbar } from 'react-bootstrap';\nimport logo from '../../logo.svg';\n\nexport function Navigation() {\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"/\">\n                <img alt=\"\" src={logo} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" /> D&D 5E Companion\n            </Navbar.Brand>\n        </Navbar>\n    );\n}\n","export interface Environments {\n    local: Config;\n}\n\nexport interface Config {\n    dd5eApi: string;\n    iconFinderApiKey: string;\n}\n\nconst local: Config = {\n    dd5eApi: 'https://www.dnd5eapi.co',\n    iconFinderApiKey: process.env.REACT_APP_ICON_FINDER_API_KEY as string,\n};\n\nexport const environments: Environments = {\n    local,\n};\n","import { Config, Environments, environments } from '../environments/environments';\n\nexport const getEnvironmentDetails = (): Config => {\n    const env = ((process.env.REACT_APP_ENV as string) as keyof Environments) || ('local' as keyof Environments);\n\n    return environments[env];\n};\n","import { Dnd5eApiPreview, CommonFetchHookInputs, GraphqlLikeResponse, Spell, GetSpellParams } from '../interfaces';\nimport { getEnvironmentDetails } from '../helpers';\n\nexport interface IDnd5eApiClient {\n    getSpellList(inputs: CommonFetchHookInputs): void;\n    getSpell(inputs: GetSpellParams): void;\n}\n\nexport class Dnd5eApiClient implements IDnd5eApiClient {\n    constructor() {\n        this.baseApiUrl = getEnvironmentDetails().dd5eApi;\n    }\n\n    baseApiUrl: string;\n\n    public getSpellList({ setIsLoading, setError, setData }: CommonFetchHookInputs): void {\n        const spellList = '/api/spells';\n        this.fetchData<GraphqlLikeResponse<Dnd5eApiPreview>>(`${this.baseApiUrl}${spellList}`)\n            .then((data: GraphqlLikeResponse<Dnd5eApiPreview>) => {\n                setData(data.results);\n            })\n            .catch((error) => {\n                setError(error.message);\n            })\n            .finally(() => {\n                setIsLoading(false);\n            });\n    }\n\n    public getSpell({ setIsLoading, setError, setData, urlRef }: GetSpellParams): void {\n        this.fetchData<Spell>(`${this.baseApiUrl}${urlRef}`)\n            .then((data) => {\n                setData(data);\n            })\n            .catch((error) => setError(error.message))\n            .finally(() => setIsLoading(false));\n    }\n\n    private fetchData<DataType>(url: string): Promise<DataType> {\n        return fetch(url).then((res) => res.json());\n    }\n}\n","import {getEnvironmentDetails} from \"../helpers\";\nimport axios from \"axios\";\n\nexport interface IIconFinderClient {\n    getImage(url: string): any;\n}\n\nexport class IconFinderApiClient implements IIconFinderClient {\n    token: string;\n    constructor() {\n        const environment = getEnvironmentDetails();\n        this.token = environment.iconFinderApiKey;\n    }\n    getImage(url: string): any {\n        axios.get(url, {\n            headers: {\n                Authorization: `Bearer ${this.token}`,\n                responseType: 'document'\n            },\n        }).then(data => console.log(data)).catch(err => console.log(err))\n    }\n}","import React, { ReactElement } from 'react';\n\nexport interface ITextFormatClient {\n    processText(text: string): ReactElement;\n}\n\ninterface RegExpCollection {\n    re: RegExp;\n    onMatch: Function;\n}\n\nexport class TextFormatClient implements ITextFormatClient {\n    regexCollection: RegExpCollection[] = [\n        { re: /AC\\s[1-9]\\d?$/i, onMatch: (text: string) => <b>{text}</b> },\n        // {}\n        ];\n    processText(text: string): ReactElement {\n        const boldOn = [1,2]\n        const wordCount = text.split(' ').length;\n        if (boldOn.indexOf(wordCount) >= 0) {\n            return <b>{text}</b>;\n        }\n        return <span>{text}</span>;\n    }\n}\n","import React, { useState } from 'react';\nimport './SearchableInput.scss';\nimport Autosuggest from 'react-autosuggest';\nimport { useFuzzyMatching, UseFuzzyMatchingProps } from '../../hooks';\n\nexport interface SearchableToggleProps<RawDataShape> {\n    placeholderText: string;\n    searchOptions: UseFuzzyMatchingProps<RawDataShape>;\n    suggestionKey: string;\n    handleSelect: Function;\n}\n\nexport function SearchableInput<SuggestionShape, RawDataShape>({\n    placeholderText,\n    searchOptions,\n    suggestionKey,\n    handleSelect,\n}: SearchableToggleProps<RawDataShape>) {\n    const [suggestions, setSuggestions] = useState<SuggestionShape[]>([]);\n    const [searchValue, setSearchValue] = useState('');\n    const fuzzySearchResults = useFuzzyMatching<SuggestionShape, RawDataShape>({ ...searchOptions, valueToMatch: searchValue });\n\n    const getSuggestionValue = (suggestion: SuggestionShape) => {\n        return (suggestion[suggestionKey as keyof SuggestionShape] as unknown) as string;\n    };\n\n    const onSuggestionsFetchRequested = () => {\n        setSuggestions(fuzzySearchResults);\n    };\n\n    const onSuggestionsClearRequested = () => {\n        setSuggestions([]);\n    };\n\n    const renderSuggestion = (suggestion: SuggestionShape) => {\n        return (\n            <div onClick={() => handleSelect(suggestion)} onTouchEnd={() => handleSelect(suggestion)}>\n                {suggestion[suggestionKey as keyof SuggestionShape]}\n            </div>\n        );\n    };\n\n    const inputProps = {\n        placeholder: placeholderText,\n        value: searchValue,\n        onChange: (_: any, { newValue }: { newValue: string }) => {\n            setSearchValue(newValue);\n        },\n    };\n\n    return (\n        <div className=\"w-100 d-flex justify-content-center\">\n            <Autosuggest\n                suggestions={suggestions}\n                onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n                onSuggestionsClearRequested={onSuggestionsClearRequested}\n                getSuggestionValue={getSuggestionValue}\n                renderSuggestion={renderSuggestion}\n                inputProps={inputProps}\n                multiSection={false}\n            />\n        </div>\n    );\n}\n","import { useEffect, useState } from 'react';\nimport FuzzySearch from 'fuzzy-search';\n\nexport interface UseFuzzyMatchingProps<RawDataShape> {\n    haystack: RawDataShape[];\n    valueToMatch?: string;\n    keys: string[];\n}\n\nexport function useFuzzyMatching<SuggestionShape, RawDataShape>({ haystack, valueToMatch, keys }: UseFuzzyMatchingProps<RawDataShape>) {\n    const [fuzzySearchResults, setFuzzySearchResults] = useState<SuggestionShape[]>([]);\n\n    useEffect(() => {\n        const defaultSearcherOptions = {\n            sort: true,\n        };\n        const searcher = new FuzzySearch((haystack as unknown) as object[], keys, defaultSearcherOptions);\n        setFuzzySearchResults((searcher.search(valueToMatch) as unknown) as SuggestionShape[]);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [valueToMatch]);\n\n    return fuzzySearchResults;\n}\n","import React, {ReactElement} from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Dnd5eApiPreview, Spell } from '../../interfaces';\nimport { ExpandoCardText, SpellRequirements } from '..';\nimport ordinal from 'ordinal';\nimport { TextFormatClient } from '../../services';\n\nexport interface SpellCardParams {\n    spell: Spell;\n    spellSelected: Dnd5eApiPreview;\n}\n\nexport function SpellCard({ spell, spellSelected }: SpellCardParams) {\n    const textClient = new TextFormatClient();\n    const conditionalDisplay = spell ? 'd-block' : 'd-none';\n    const processedText: ReactElement[] = spell?.desc.map((textEntry) => textClient.processText(textEntry)) || [];\n    const firstEntry = processedText?.shift() || '';\n    const spellRitual = spell && spell.ritual ? ' (ritual)' : '';\n    const spellCategory = spell ? `${ordinal(spell?.level)}-level ${spell.school.name}${spellRitual}` : '';\n\n    return (\n        <Card className={`${conditionalDisplay} mx-3 mt-2 w-100`}>\n            {conditionalDisplay === 'd-block' && (\n                <Card.Body>\n                    <Card.Title>{spell?.name || ''}</Card.Title>\n                    <Card.Subtitle className=\"mb-2 text-muted\">{spellCategory}</Card.Subtitle>\n                    <SpellRequirements\n                        castingTime={spell?.casting_time || ''}\n                        range={spell?.range || ''}\n                        components={spell?.components || []}\n                        duration={spell?.duration || ''}\n                        school={spell?.school.name || ''}\n                    />\n                    <Card.Text className=\"text-justify\">{firstEntry}</Card.Text>\n                    {processedText.length ? <ExpandoCardText handleSelected={spellSelected} text={processedText} /> : null}\n                </Card.Body>\n            )}\n        </Card>\n    );\n}\n","import React, {ReactElement, useEffect, useState} from 'react';\nimport './ExpandoCardText.scss';\nimport { Button, Card, Collapse } from 'react-bootstrap';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport interface IExpandoCardText<SelectedDataShape> {\n    text: ReactElement[];\n    handleSelected: SelectedDataShape;\n}\n\nexport function ExpandoCardText<SelectedDataShape>({ text, handleSelected }: IExpandoCardText<SelectedDataShape>) {\n    const [open, setOpen] = useState(false);\n\n    useEffect(() => {\n        setOpen(false);\n    }, [handleSelected]);\n\n    const expandableTextEntry = (textEntry: ReactElement) => (\n        <Card.Text className=\"text-justify\" key={uuidv4()}>\n            {textEntry}\n        </Card.Text>\n    );\n    const expandableComponent = text.map((entry) => expandableTextEntry(entry));\n\n    return (\n        <>\n            <Collapse in={open}>\n                <div className=\"mb-0\" id=\"example-collapse-text\">\n                    {expandableComponent}\n                </div>\n            </Collapse>\n            <div className=\"d-flex justify-content-end\">\n                <a\n                    className=\"text-justify mt-3 text-muted cursor-hover\"\n                    onClick={() => setOpen(!open)}\n                    aria-controls=\"example-collapse-text\"\n                    aria-expanded={open}\n                >\n                    {open ? 'Hide' : 'Read more'}\n                </a>\n            </div>\n        </>\n    );\n}\n","import { useEffect, useState } from 'react';\nimport { ISpellRequirements } from '../components';\nimport { getIcon } from '../helpers';\nimport {IconFinderApiClient} from \"../services\";\n\nexport interface ContentDetails extends ISpellRequirements {\n    imageUrl: string;\n}\n\nexport function useSpellRequirements(params: ISpellRequirements): ContentDetails {\n    const [castingTime, setCastingTime] = useState('');\n    const [range, setRange] = useState('');\n    const [components, setComponents] = useState<string[]>([]);\n    const [duration, setDuration] = useState('');\n    const [school, setSchool] = useState('');\n    const [imageUrl, setImageUrl] = useState('');\n\n    useEffect(() => {\n        const iconFinderClient = new IconFinderApiClient();\n        if (params.school) {\n            setCastingTime(params.castingTime);\n            setRange(params.range);\n            setComponents(params.components);\n            setDuration(params.duration);\n            setSchool(params.school);\n            setImageUrl(getIcon(params.school.toLowerCase()));\n            iconFinderClient.getImage(imageUrl);\n\n        }\n    }, [params]);\n\n    return { castingTime, range, components, duration, school, imageUrl };\n}\n","import { getEnvironmentDetails } from './index';\nimport { Icon } from '../interfaces';\n\nexport const getIcon = (school: string) => {\n    const initIconList: Icon[] = [\n        { school: 'evocation', url: '' },\n        { school: 'illusion', url: '' },\n        { school: 'necromancy', url: 'https://api.iconfinder.com/v4/icons/7112664/formats/png/32/download' },\n        { school: 'enchantment', url: '' },\n        { school: 'divination', url: '' },\n        { school: 'transmutation', url: '' },\n        { school: 'conjuration', url: '' },\n        { school: 'abjuration', url: '' },\n    ];\n\n    const masterIconList = initIconList.map((icon) => ({ ...icon, url: `${icon.url}` }));\n\n    return masterIconList.find((icon) => icon.school === school)?.url || '';\n};\n","import React, { useState } from 'react';\nimport { Content, GenericTable } from '..';\nimport { ContentDetails, useSpellRequirements } from '../../hooks/useSpellRequirements';\n\nexport interface ISpellRequirements {\n    castingTime: string;\n    range: string;\n    components: string[];\n    duration: string;\n    school: string;\n}\n\nexport function SpellRequirements(params: ISpellRequirements) {\n    const contentDetails = useSpellRequirements(params);\n    const tableHeadings = Object.keys(params);\n    const tableContent: Content[] = mapToContent(contentDetails);\n\n    return <GenericTable headings={tableHeadings} tableContent={tableContent} />;\n}\n\nconst mapToContent = (params: ContentDetails): Content[] => {\n    return [\n        {\n            text: params.castingTime,\n        },\n        {\n            text: params.components.toString(),\n        },\n        {\n            text: params.duration,\n        },\n        {\n            text: params.range,\n        },\n        {\n            text: params.school,\n            imageUrl: params.imageUrl,\n        },\n    ];\n};\n","import React, { ReactElement } from 'react';\nimport { Table } from 'react-bootstrap';\nimport * as changeCase from 'change-case';\n\nexport interface IGenericTable {\n    headings: string[];\n    tableContent: Content[];\n}\n\nexport interface Content {\n    text: string;\n    imageUrl?: string;\n    customElement?: ReactElement;\n}\n\nexport function GenericTable(params: IGenericTable) {\n    const headings = params.headings.map((entry) => <th>{changeCase.capitalCase(entry)}</th>);\n    const standardContent = params.tableContent.map((content) => (\n        <td>\n            {content.text}\n        </td>\n    ));\n    return (\n        <Table bordered striped>\n            <thead>\n                <tr>{headings}</tr>\n            </thead>\n            <tbody>\n                <tr>{standardContent}</tr>\n            </tbody>\n        </Table>\n    );\n}\n","import React, { useState } from 'react';\nimport './GenericSearchPage.scss';\nimport { Col, Container, Row, Spinner } from 'react-bootstrap';\nimport { SearchableInput, SearchableToggleProps } from '../../components';\nimport { useSpellList } from '../../hooks';\nimport { Dnd5eApiPreview, Spell } from '../../interfaces';\nimport { useSpell } from '../../hooks';\nimport { SpellCard } from '../../components/SpellCard/SpellCard';\n\nexport function GenericSearchPage() {\n    const initSpellSelected: Dnd5eApiPreview = {\n        index: 'acid-arrow',\n        name: 'Acid Arrow',\n        url: '/api/spells/acid-arrow',\n    };\n    const [spellSelected, setSpellSelected] = useState<Dnd5eApiPreview>(initSpellSelected);\n    const { spellList, isSpellListLoading, spellListError } = useSpellList();\n    const { spell, isSpellLoading, spellError } = useSpell(spellSelected);\n\n    const inputOptions: SearchableToggleProps<Dnd5eApiPreview> = {\n        suggestionKey: 'name',\n        placeholderText: 'Start by typing a spell...',\n        searchOptions: {\n            haystack: spellList,\n            keys: ['name', 'url'],\n        },\n        handleSelect: (suggestion: Dnd5eApiPreview) => {\n            setSpellSelected(suggestion);\n        },\n    };\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col className=\"mt-3\">\n                    <h3>Spell Search</h3>\n                    <SearchableInput\n                        searchOptions={inputOptions.searchOptions}\n                        placeholderText={inputOptions.placeholderText}\n                        suggestionKey={inputOptions.suggestionKey}\n                        handleSelect={inputOptions.handleSelect}\n                    />\n                    {isSpellListLoading ||\n                        (isSpellLoading && (\n                            <>\n                                <Spinner animation=\"border\" role=\"status\" className=\"mt-3 mr-3\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </Spinner>\n                                <span>Loading details...</span>\n                            </>\n                        ))}\n                </Col>\n            </Row>\n            <Row>\n                <Col className=\"mt-3 d-flex justify-content-center\">\n                    <SpellCard spell={spell as Spell} spellSelected={spellSelected} />\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n","import { useEffect, useState } from 'react';\nimport { Dnd5eApiPreview, CommonFetchHookInputs } from '../interfaces';\nimport { Dnd5eApiClient } from '../services';\n\nexport function useSpellList() {\n    const [spellList, setSpellList] = useState<Dnd5eApiPreview[]>([]);\n    const [isSpellListLoading, setIsLoading] = useState(false);\n    const [spellListError, setError] = useState('');\n    const apiClient = new Dnd5eApiClient();\n\n    useEffect(() => {\n        setIsLoading(true);\n        const params: CommonFetchHookInputs = {\n            setIsLoading,\n            setError,\n            setData: setSpellList,\n        };\n        apiClient.getSpellList(params);\n    }, []);\n\n    return { spellList, isSpellListLoading, spellListError };\n}\n","import { useEffect, useState } from 'react';\nimport { Spell, GetSpellParams, Dnd5eApiPreview } from '../interfaces';\nimport { Dnd5eApiClient } from '../services';\n\nexport function useSpell(spellSelected: Dnd5eApiPreview) {\n    const [spell, setSpell] = useState<Spell>();\n    const [isSpellLoading, setIsLoading] = useState(false);\n    const [spellError, setError] = useState('');\n    const apiClient = new Dnd5eApiClient();\n\n    useEffect(() => {\n        if (spellSelected) {\n            setIsLoading(true);\n            const params: GetSpellParams = {\n                setIsLoading,\n                setError,\n                setData: setSpell,\n                urlRef: spellSelected.url,\n            };\n            apiClient.getSpell(params);\n        }\n    }, [spellSelected]);\n\n    return { spell, isSpellLoading, spellError };\n}\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Switch, Route } from 'react-router-dom';\nimport { Navigation } from './components';\nimport { GenericSearchPage } from './pages';\n\nfunction App() {\n    require('dotenv').config();\n\n    return (\n        <Switch>\n            <Route\n                exact\n                path=\"/\"\n                render={() => (\n                    <div className=\"App\">\n                        <Navigation />\n                        <GenericSearchPage />\n                    </div>\n                )}\n            />\n        </Switch>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createBrowserHistory } from 'history';\nimport { applyMiddleware, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport createRootReducer from './reducers';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nexport const history = createBrowserHistory();\n\nexport function configureStore(preloadedState?: any) {\n    return createStore(\n        // @ts-ignore\n        createRootReducer(history), // root reducer with router state\n        preloadedState,\n        composeWithDevTools(\n            applyMiddleware(\n                routerMiddleware(history), // for dispatching history actions\n                thunk\n                // ... other middlewares ...\n            )\n        )\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\n// @ts-ignore\nimport { configureStore, history } from './configureStore';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\n\nexport const store = configureStore();\nconst client = new ApolloClient({\n    uri: process.env.REACT_APP_GRAPHQL_API,\n    cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <Route component={App} />\n        </HashRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\n\nexport default (history: History<any>) =>\n    combineReducers({\n        router: connectRouter(history),\n    });\n"],"sourceRoot":""}